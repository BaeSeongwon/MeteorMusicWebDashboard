{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"if (Meteor.isClient) {\n\tTracker.autorun(function () {\n\t\tMeteor.call('getConfig', function (err, res) {\n\t\t\tif (res) Meteor.call('setServiceConfig');\n\t\t});\n\t\tMeteor.call('getRoute', function (err, res) {\n\t\t\tif (res) Session.set('auth_route', res);\n\t\t});\n\n\t\t// authorize user and update token everytime the request_uri is hit\n\t\tif (Meteor.userId() && window.location.pathname == Session.get('auth_route')) {\n\t\t\tvar userId = Meteor.userId();\n\t\t\tvar params = window.location.search;\n\t\t\tvar regex = new RegExp(/code=[a-z0-9]+/);\n\t\t\tvar code = params.match(regex)[0].split('code=')[1];\n\t\t\tif (code) Meteor.call('authorizeUser', code, userId, function (err, res) {\n\t\t\t\tif (err) console.log(err);\n\t\t\t});\n\t\t}\n\t});\n}","ast":null,"map":{"version":3,"sources":["/lib/both/router.js"],"names":[],"mappings":"AAAA,IAAG,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAO,CAAC,OAAO,CAAC,YAAM;AACrB,QAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACtC,OAAG,GAAG,EACL,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;GAChC,CAAC,CAAA;AACF,QAAM,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACrC,OAAG,GAAG,EACL,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;GAC/B,CAAC,CAAA;;;AAGF,MAAG,MAAM,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;AAC5E,OAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAA;AAC9B,OAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAA;AACrC,OAAM,KAAK,GAAG,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAA;AAC1C,OAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;AACrD,OAAG,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACjE,QAAG,GAAG,EACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACjB,CAAC,CAAA;GACF;EACD,CAAC,CAAA;CACF","file":"/lib/both/router.js.map","sourcesContent":["if(Meteor.isClient) {\n\tTracker.autorun(() => {\n\t\tMeteor.call('getConfig', (err, res) => {\n\t\t\tif(res) \n\t\t\t\tMeteor.call('setServiceConfig')\n\t\t})\n\t\tMeteor.call('getRoute', (err, res) => {\n\t\t\tif(res) \n\t\t\t\tSession.set('auth_route', res)\n\t\t})\t\n\n\t\t// authorize user and update token everytime the request_uri is hit\n\t\tif(Meteor.userId() && window.location.pathname == Session.get('auth_route')) {\n\t\t\tconst userId = Meteor.userId()\n\t\t\tconst params = window.location.search \n\t\t\tconst regex = new RegExp(/code=[a-z0-9]+/)\n\t\t\tconst code = params.match(regex)[0].split('code=')[1]\n\t\t\tif(code) Meteor.call('authorizeUser', code, userId, (err, res) => {\n\t\t\t\tif(err)\n\t\t\t\t\tconsole.log(err)\n\t\t\t})\n\t\t}\n\t})\t\n}\n"]},"hash":"27efd08bf911aa7ee9fa0278a3b816c9228dd899"}
