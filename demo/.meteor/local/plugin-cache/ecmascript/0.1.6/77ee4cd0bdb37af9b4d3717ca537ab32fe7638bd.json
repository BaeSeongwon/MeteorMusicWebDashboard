{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"if (Meteor.isClient) {}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // The client ID is obtained from the Google Developers Console\n    // at https://console.developers.google.com/.\n    // If you run this code from a server other than http://localhost,\n    // you need to register your own client ID.\n    var OAUTH2_CLIENT_ID = '150043008011-cutr1cmlh7cusqp83ra5kqaesgioqdsr.apps.googleusercontent.com';\n    var OAUTH2_SCOPES = ['https://www.googleapis.com/auth/youtube'];\n\n    // Upon loading, the Google APIs JS client automatically invokes this callback.\n    googleApiClientReady = function () {\n      gapi.auth.init(function () {\n        window.setTimeout(checkAuth, 1);\n      });\n    };\n\n    // Attempt the immediate OAuth 2.0 client flow as soon as the page loads.\n    // If the currently logged-in Google Account has previously authorized\n    // the client specified as the OAUTH2_CLIENT_ID, then the authorization\n    // succeeds with no user intervention. Otherwise, it fails and the\n    // user interface that prompts for authorization needs to display.\n    function checkAuth() {\n      gapi.auth.authorize({\n        client_id: OAUTH2_CLIENT_ID,\n        scope: OAUTH2_SCOPES,\n        immediate: true\n      }, handleAuthResult);\n    }\n\n    // Handle the result of a gapi.auth.authorize() call.\n    function handleAuthResult(authResult) {\n      if (authResult && !authResult.error) {\n        // Authorization was successful. Hide authorization prompts and show\n        // content that should be visible after authorization succeeds.\n        $('.pre-auth').hide();\n        $('.post-auth').show();\n        loadAPIClientInterfaces();\n      } else {\n        // Make the #login-link clickable. Attempt a non-immediate OAuth 2.0\n        // client flow. The current function is called when that flow completes.\n        $('#login-link').click(function () {\n          gapi.auth.authorize({\n            client_id: OAUTH2_CLIENT_ID,\n            scope: OAUTH2_SCOPES,\n            immediate: false\n          }, handleAuthResult);\n        });\n      }\n    }\n\n    // Load the client interfaces for the YouTube Analytics and Data APIs, which\n    // are required to use the Google APIs JS client. More info is available at\n    // http://code.google.com/p/google-api-javascript-client/wiki/GettingStarted#Loading_the_Client\n    function loadAPIClientInterfaces() {\n      gapi.client.load('youtube', 'v3', function () {\n        handleAPILoaded();\n      });\n    }\n  });\n}","ast":null,"map":{"version":3,"sources":["/demo.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE,EAGpB;;AAED,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAM,CAAC,OAAO,CAAC,YAAY;;;;;AAKzB,QAAI,gBAAgB,GAAG,0EAA0E,CAAC;AAClG,QAAI,aAAa,GAAG,CAClB,yCAAyC,CAC1C,CAAC;;;AAGF,wBAAoB,GAAG,YAAW;AAChC,UAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAW;AACxB,cAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;OACjC,CAAC,CAAC;KACJ,CAAA;;;;;;;AAOD,aAAS,SAAS,GAAG;AACnB,UAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAClB,iBAAS,EAAE,gBAAgB;AAC3B,aAAK,EAAE,aAAa;AACpB,iBAAS,EAAE,IAAI;OAChB,EAAE,gBAAgB,CAAC,CAAC;KACtB;;;AAGD,aAAS,gBAAgB,CAAC,UAAU,EAAE;AACpC,UAAI,UAAU,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;;;AAGnC,SAAC,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;AACtB,SAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;AACvB,+BAAuB,EAAE,CAAC;OAC3B,MAAM;;;AAGL,SAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,YAAW;AAChC,cAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAClB,qBAAS,EAAE,gBAAgB;AAC3B,iBAAK,EAAE,aAAa;AACpB,qBAAS,EAAE,KAAK;WACjB,EAAE,gBAAgB,CAAC,CAAC;SACtB,CAAC,CAAC;OACJ;KACF;;;;;AAKD,aAAS,uBAAuB,GAAG;AACjC,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,YAAW;AAC3C,uBAAe,EAAE,CAAC;OACnB,CAAC,CAAC;KACJ;GAEF,CAAC,CAAC;CACJ","file":"/demo.js.map","sourcesContent":["if (Meteor.isClient) {\n\n\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // The client ID is obtained from the Google Developers Console\n// at https://console.developers.google.com/.\n// If you run this code from a server other than http://localhost,\n// you need to register your own client ID.\n    var OAUTH2_CLIENT_ID = '150043008011-cutr1cmlh7cusqp83ra5kqaesgioqdsr.apps.googleusercontent.com';\n    var OAUTH2_SCOPES = [\n      'https://www.googleapis.com/auth/youtube'\n    ];\n\n// Upon loading, the Google APIs JS client automatically invokes this callback.\n    googleApiClientReady = function() {\n      gapi.auth.init(function() {\n        window.setTimeout(checkAuth, 1);\n      });\n    }\n\n// Attempt the immediate OAuth 2.0 client flow as soon as the page loads.\n// If the currently logged-in Google Account has previously authorized\n// the client specified as the OAUTH2_CLIENT_ID, then the authorization\n// succeeds with no user intervention. Otherwise, it fails and the\n// user interface that prompts for authorization needs to display.\n    function checkAuth() {\n      gapi.auth.authorize({\n        client_id: OAUTH2_CLIENT_ID,\n        scope: OAUTH2_SCOPES,\n        immediate: true\n      }, handleAuthResult);\n    }\n\n// Handle the result of a gapi.auth.authorize() call.\n    function handleAuthResult(authResult) {\n      if (authResult && !authResult.error) {\n        // Authorization was successful. Hide authorization prompts and show\n        // content that should be visible after authorization succeeds.\n        $('.pre-auth').hide();\n        $('.post-auth').show();\n        loadAPIClientInterfaces();\n      } else {\n        // Make the #login-link clickable. Attempt a non-immediate OAuth 2.0\n        // client flow. The current function is called when that flow completes.\n        $('#login-link').click(function() {\n          gapi.auth.authorize({\n            client_id: OAUTH2_CLIENT_ID,\n            scope: OAUTH2_SCOPES,\n            immediate: false\n          }, handleAuthResult);\n        });\n      }\n    }\n\n// Load the client interfaces for the YouTube Analytics and Data APIs, which\n// are required to use the Google APIs JS client. More info is available at\n// http://code.google.com/p/google-api-javascript-client/wiki/GettingStarted#Loading_the_Client\n    function loadAPIClientInterfaces() {\n      gapi.client.load('youtube', 'v3', function() {\n        handleAPILoaded();\n      });\n    }\n\n  });\n}\n"]},"hash":"77ee4cd0bdb37af9b4d3717ca537ab32fe7638bd"}
