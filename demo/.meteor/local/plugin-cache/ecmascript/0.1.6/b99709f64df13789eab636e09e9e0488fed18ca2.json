{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"if (Meteor.isClient) {\n  // counter starts at 0\n\n  Template.hello.events({\n    'click button': function () {\n\n      console.log(\"asdasd\");\n      // The client ID is obtained from the Google Developers Console\n      // at https://console.developers.google.com/.\n      // If you run this code from a server other than http://localhost,\n      // you need to register your own client ID.\n      var OAUTH2_CLIENT_ID = '150043008011-cutr1cmlh7cusqp83ra5kqaesgioqdsr.apps.googleusercontent.com';\n      var OAUTH2_SCOPES = ['https://www.googleapis.com/auth/youtube'];\n\n      // Upon loading, the Google APIs JS client automatically invokes this callback.\n      googleApiClientReady = function () {\n        gapi.auth.init(function () {\n          window.setTimeout(checkAuth, 1);\n        });\n      };\n\n      // Attempt the immediate OAuth 2.0 client flow as soon as the page loads.\n      // If the currently logged-in Google Account has previously authorized\n      // the client specified as the OAUTH2_CLIENT_ID, then the authorization\n      // succeeds with no user intervention. Otherwise, it fails and the\n      // user interface that prompts for authorization needs to display.\n      function checkAuth() {\n        gapi.auth.authorize({\n          client_id: OAUTH2_CLIENT_ID,\n          scope: OAUTH2_SCOPES,\n          immediate: true\n        }, handleAuthResult);\n      }\n\n      // Handle the result of a gapi.auth.authorize() call.\n      function handleAuthResult(authResult) {\n        if (authResult && !authResult.error) {\n          // Authorization was successful. Hide authorization prompts and show\n          // content that should be visible after authorization succeeds.\n          $('.pre-auth').hide();\n          $('.post-auth').show();\n          loadAPIClientInterfaces();\n        } else {\n          // Make the #login-link clickable. Attempt a non-immediate OAuth 2.0\n          // client flow. The current function is called when that flow completes.\n          $('#login-link').click(function () {\n            gapi.auth.authorize({\n              client_id: OAUTH2_CLIENT_ID,\n              scope: OAUTH2_SCOPES,\n              immediate: false\n            }, handleAuthResult);\n          });\n        }\n      }\n\n      // Load the client interfaces for the YouTube Analytics and Data APIs, which\n      // are required to use the Google APIs JS client. More info is available at\n      // http://code.google.com/p/google-api-javascript-client/wiki/GettingStarted#Loading_the_Client\n      function loadAPIClientInterfaces() {\n        gapi.client.load('youtube', 'v3', function () {\n          handleAPILoaded();\n        });\n      }\n    }\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}","ast":null,"map":{"version":3,"sources":["/demo.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;;;AAInB,UAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACpB,kBAAc,EAAE,YAAY;;AAE1B,aAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;;;;AAKtB,UAAI,gBAAgB,GAAG,0EAA0E,CAAC;AAClG,UAAI,aAAa,GAAG,CAClB,yCAAyC,CAC1C,CAAC;;;AAGF,0BAAoB,GAAG,YAAW;AAChC,YAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAW;AACxB,gBAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SACjC,CAAC,CAAC;OACJ,CAAA;;;;;;;AAOD,eAAS,SAAS,GAAG;AACnB,YAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAClB,mBAAS,EAAE,gBAAgB;AAC3B,eAAK,EAAE,aAAa;AACpB,mBAAS,EAAE,IAAI;SAChB,EAAE,gBAAgB,CAAC,CAAC;OACtB;;;AAGD,eAAS,gBAAgB,CAAC,UAAU,EAAE;AACpC,YAAI,UAAU,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;;;AAGnC,WAAC,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;AACtB,WAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;AACvB,iCAAuB,EAAE,CAAC;SAC3B,MAAM;;;AAGL,WAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,YAAW;AAChC,gBAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAClB,uBAAS,EAAE,gBAAgB;AAC3B,mBAAK,EAAE,aAAa;AACpB,uBAAS,EAAE,KAAK;aACjB,EAAE,gBAAgB,CAAC,CAAC;WACtB,CAAC,CAAC;SACJ;OACF;;;;;AAKD,eAAS,uBAAuB,GAAG;AACjC,YAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,YAAW;AAC3C,yBAAe,EAAE,CAAC;SACnB,CAAC,CAAC;OACJ;KAEF;GACF,CAAC,CAAC;CACJ;;AAED,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAM,CAAC,OAAO,CAAC,YAAY;;GAE1B,CAAC,CAAC;CACJ","file":"/demo.js.map","sourcesContent":["if (Meteor.isClient) {\n  // counter starts at 0\n\n\n  Template.hello.events({\n    'click button': function () {\n\n      console.log(\"asdasd\");\n      // The client ID is obtained from the Google Developers Console\n// at https://console.developers.google.com/.\n// If you run this code from a server other than http://localhost,\n// you need to register your own client ID.\n      var OAUTH2_CLIENT_ID = '150043008011-cutr1cmlh7cusqp83ra5kqaesgioqdsr.apps.googleusercontent.com';\n      var OAUTH2_SCOPES = [\n        'https://www.googleapis.com/auth/youtube'\n      ];\n\n// Upon loading, the Google APIs JS client automatically invokes this callback.\n      googleApiClientReady = function() {\n        gapi.auth.init(function() {\n          window.setTimeout(checkAuth, 1);\n        });\n      }\n\n// Attempt the immediate OAuth 2.0 client flow as soon as the page loads.\n// If the currently logged-in Google Account has previously authorized\n// the client specified as the OAUTH2_CLIENT_ID, then the authorization\n// succeeds with no user intervention. Otherwise, it fails and the\n// user interface that prompts for authorization needs to display.\n      function checkAuth() {\n        gapi.auth.authorize({\n          client_id: OAUTH2_CLIENT_ID,\n          scope: OAUTH2_SCOPES,\n          immediate: true\n        }, handleAuthResult);\n      }\n\n// Handle the result of a gapi.auth.authorize() call.\n      function handleAuthResult(authResult) {\n        if (authResult && !authResult.error) {\n          // Authorization was successful. Hide authorization prompts and show\n          // content that should be visible after authorization succeeds.\n          $('.pre-auth').hide();\n          $('.post-auth').show();\n          loadAPIClientInterfaces();\n        } else {\n          // Make the #login-link clickable. Attempt a non-immediate OAuth 2.0\n          // client flow. The current function is called when that flow completes.\n          $('#login-link').click(function() {\n            gapi.auth.authorize({\n              client_id: OAUTH2_CLIENT_ID,\n              scope: OAUTH2_SCOPES,\n              immediate: false\n            }, handleAuthResult);\n          });\n        }\n      }\n\n// Load the client interfaces for the YouTube Analytics and Data APIs, which\n// are required to use the Google APIs JS client. More info is available at\n// http://code.google.com/p/google-api-javascript-client/wiki/GettingStarted#Loading_the_Client\n      function loadAPIClientInterfaces() {\n        gapi.client.load('youtube', 'v3', function() {\n          handleAPILoaded();\n        });\n      }\n\n    }\n  });\n}\n\nif (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]},"hash":"b99709f64df13789eab636e09e9e0488fed18ca2"}
