{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Auth methods\n */\n\nauthorizeUser = function (code, cb) {\n\tvar ig = instagramNode.instagram();\n\tig.use({\n\t\tclient_id: ig_config.client_id,\n\t\tclient_secret: ig_config.client_secret\n\t});\n\tig.authorize_user(code, ig_config.redirect_uri, function (err, res) {\n\t\tif (err)\n\t\t\t//\t\tconsole.log(err)\n\t\t\tcb && cb(err, null);\n\t\tif (res) cb && cb(null, res);\n\t});\n};\n\nMeteor.methods({\n\tsetAccessToken: function (token, userId) {\n\t\tvar id = Meteor.users.update(userId, {\n\t\t\t$set: { 'services.instagram.accessToken': token }\n\t\t});\n\t\treturn id;\n\t},\n\tgetAccessToken: function (userId) {\n\t\tvar user = Meteor.users.findOne(userId);\n\t\tif (user) return user.services.instagram.accessToken;\n\t\treturn false;\n\t},\n\tgetRoute: function () {\n\t\tif (ig_config && ig_config.redirect_uri) {\n\t\t\tparts = ig_config.redirect_uri.split('/');\n\t\t\tpath = parts[parts.length - 1];\n\t\t\treturn '/' + path;\n\t\t}\n\t\treturn false;\n\t},\n\tgetAuthUrl: function () {\n\t\tvar ig = instagramNode.instagram();\n\t\tig.use({\n\t\t\tclient_id: ig_config.client_id,\n\t\t\tclient_secret: ig_config.client_secret\n\t\t});\n\t\tif (ig_config && ig_config.redirect_uri) return ig.get_authorization_url(ig_config.redirect_uri, ig_config.scope);\n\t},\n\tauthorizeUser: function (code, userId) {\n\t\tvar authorizeUserAsync = Meteor.wrapAsync(authorizeUser);\n\t\ttry {\n\t\t\tauthorizeUserAsync(code, function (err, res) {\n\t\t\t\tif (res) {\n\t\t\t\t\tif (res.access_token) {\n\t\t\t\t\t\tvar token = res.access_token;\n\t\t\t\t\t\tMeteor.call('setAccessToken', token, userId, function (err, res) {\n\t\t\t\t\t\t\tconsole.log('setAccessToken', res);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\terror = e.toString();\n\t\t\tthrow new Meteor.Error(500, error);\n\t\t}\n\t},\n\tgetConfig: function () {\n\t\treturn ig_config ? true : false;\n\t},\n\tsetServiceConfig: function () {\n\t\tif (ig_config && ig_config.client_id && ig_config.client_secret) {\n\t\t\tServiceConfiguration.configurations.update({ service: 'instagram' }, {\n\t\t\t\t$set: {\n\t\t\t\t\tscope: ig_config.scope,\n\t\t\t\t\tclientId: ig_config.client_id,\n\t\t\t\t\tsecret: ig_config.client_secret\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t}\n});","ast":null,"map":{"version":3,"sources":["/lib/server/methods.js"],"names":[],"mappings":"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","file":"/lib/server/methods.js.map","sourcesContent":["/**\n * Auth methods\n */\n\nauthorizeUser = (code, cb) => {\n\tconst ig = instagramNode.instagram()\n\tig.use({\n\t\tclient_id: ig_config.client_id,\n\t\tclient_secret: ig_config.client_secret\n\t})\n\tig.authorize_user(code, ig_config.redirect_uri, (err, res) => {\n\t\tif(err)\n\t//\t\tconsole.log(err)\n\t\t\tcb && cb(err, null)\n\t\tif(res)\n\t\t\tcb && cb(null, res)\n\t})\t\n}\n\nMeteor.methods({\n\tsetAccessToken: (token, userId) => {\n\t\tlet id = Meteor.users.update(userId, {\n\t\t\t$set: {'services.instagram.accessToken': token}\n\t\t})\n\t\treturn id\n\t},\n\tgetAccessToken: (userId) => {\n\t\tconst user = Meteor.users.findOne(userId)\n\t\tif(user) return user.services.instagram.accessToken\n\t\treturn false\n\t},\n\tgetRoute: () => {\n\t\tif(ig_config && ig_config.redirect_uri) {\n\t\t\tparts = ig_config.redirect_uri.split('/')\n\t\t\tpath = parts[parts.length -1]\n\t\t\treturn `/${path}`\n\t\t}\n\t\treturn false\n\t},\n\tgetAuthUrl: () => {\n\t\tconst ig = instagramNode.instagram()\n\t\tig.use({\n\t\t\tclient_id: ig_config.client_id,\n\t\t\tclient_secret: ig_config.client_secret\n\t\t})\n\t\tif(ig_config && ig_config.redirect_uri)\n\t\t\treturn ig.get_authorization_url(ig_config.redirect_uri, ig_config.scope)\n\t},\n\tauthorizeUser: (code, userId) => {\n\t\tlet authorizeUserAsync = Meteor.wrapAsync(authorizeUser)\n\t\ttry {\n\t\t\tauthorizeUserAsync(code, (err, res) => {\n\t\t\t\tif(res) {\n\t\t\t\t\tif(res.access_token) {\n\t\t\t\t\t\tconst token = res.access_token\n\t\t\t\t\t\tMeteor.call('setAccessToken', token, userId, (err, res) => {\n\t\t\t\t\t\t\tconsole.log('setAccessToken', res)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}  \t\t\n\t   \t\t})\n\t\t\t\n\t\t}\n\t\tcatch(e) {\n\t\t\terror = e.toString()\n\t\t\tthrow new Meteor.Error(500, error)\n\t\t}\n\t},\n\tgetConfig: () => ig_config ? true : false,\n\tsetServiceConfig: () => {\n\t\tif(ig_config && ig_config.client_id && ig_config.client_secret) {\n\t\t\tServiceConfiguration.configurations.update({ service: 'instagram' },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tscope: ig_config.scope,\n\t\t\t\t\tclientId: ig_config.client_id,\n\t\t\t\t\tsecret: ig_config.client_secret\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn true\n\t\t}\n\t}\n})\n"]},"hash":"76d7fbb87ca2e9bce114475b033d64c8b42e6c12"}
