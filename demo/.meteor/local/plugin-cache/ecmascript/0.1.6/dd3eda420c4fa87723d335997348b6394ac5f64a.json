{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * User methods\n */\n\ngetData = function (userId, options, functionName, cb) {\n\tMeteor.call('getAccessToken', userId, function (err, res) {\n\t\tif (res) {\n\t\t\tvar token = res;\n\t\t\tvar ig = instagramNode.instagram();\n\t\t\tig.use({\n\t\t\t\taccess_token: token\n\t\t\t});\n\t\t\toptions = options || {};\n\t\t\tig_func = ig[functionName];\n\t\t\tig_func(options, cb, function (err, res) {\n\t\t\t\tif (err)\n\t\t\t\t\t//\t\tconsole.log(err)\n\t\t\t\t\tcb && cb(err, null);\n\t\t\t\tif (res) cb && cb(null, res);\n\t\t\t});\n\t\t}\n\t});\n};\n\nprocessCall = function (userId, options, functionName) {\n\tvar getCallAsync = Meteor.wrapAsync(getData);\n\ttry {\n\t\tvar result = getCallAsync(userId, options, functionName);\n\t\tif (result) return result;\n\t} catch (e) {\n\t\terror = e.toString();\n\t\tthrow new Meteor.Error(500, error);\n\t}\n};\n\nMeteor.methods({\n\t'userData': function (userId) {\n\t\tvar token = Meteor.call('getAccessToken', userId);\n\t\tif (token) {\n\t\t\tvar url = 'https://api.instagram.com/v1/users/self/?access_token=' + token;\n\t\t\tvar result = HTTP.call('GET', url);\n\t\t\tif (result && result.statusCode == 200) {\n\t\t\t\treturn result.data;\n\t\t\t}\n\t\t}\n\t},\n\t'getUserFollowersCount': function (userId) {\n\t\tvar user = Meteor.call('userData', userId);\n\t\tif (user && (user.data.counts.followed_by || user.data.counts.followed_by == 0)) return user.data.counts.followed_by;\n\t\treturn false;\n\t},\n\t/**\n * Get the list of recent media liked by the user\n * @param userId {string}\n * @param options object { count,        [opt]\n *                         max_like_id   [opt] }\n * @returns {Array}\n */\n\t'getUserMediaLiked': function (userId, options) {\n\t\treturn processCall(userId, options, 'user_self_liked');\n\t},\n\t/**\n * Get the list of recent media published by the user\n * @param userId {string}\n * @param options object { count,           [opt]\n    *                         max_timestamp,   [opt]\n    *                         min_timestamp,   [opt]\n    *                         max_id,          [opt]\n    *                         min_id           [opt] }\n * @returns {Array}\n */\n\t'getUserMedia': function (userId, options) {\n\t\treturn processCall(userId, options, 'user_self_media_recent');\n\t}\n});","ast":null,"map":{"version":3,"sources":["/lib/server/users.js"],"names":[],"mappings":";;;;AAIC,OAAO,GAAG,UAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE,EAAK;AACjD,OAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACnD,MAAG,GAAG,EAAE;AACP,OAAM,KAAK,GAAG,GAAG,CAAA;AACjB,OAAM,EAAE,GAAG,aAAa,CAAC,SAAS,EAAE,CAAA;AACpC,KAAE,CAAC,GAAG,CAAC;AACN,gBAAY,EAAE,KAAK;IACnB,CAAC,CAAA;AACF,UAAO,GAAG,OAAO,IAAI,EAAE,CAAA;AACvB,UAAO,GAAG,EAAE,CAAC,YAAY,CAAC,CAAA;AAC1B,UAAO,CAAC,OAAO,EAAE,EAAE,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAClC,QAAG,GAAG;;AAEL,OAAE,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;AACpB,QAAG,GAAG,EACL,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;IACpB,CAAC,CAAA;GACF;EACD,CAAC,CAAA;CACD,CAAA;;AAED,WAAW,GAAG,UAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAK;AAChD,KAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;AAC7C,KAAI;AACH,MAAI,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,OAAO,EAAE,YAAY,CAAC,CAAA;AACxD,MAAG,MAAM,EACR,OAAO,MAAM,CAAA;EACd,CACD,OAAM,CAAC,EAAE;AACR,OAAK,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;AACpB,QAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;EAClC;CACA,CAAA;;AAED,MAAM,CAAC,OAAO,CAAC;AACd,WAAU,EAAE,UAAC,MAAM,EAAK;AACxB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAA;AAClD,MAAG,KAAK,EAAE;AACT,OAAM,GAAG,8DAA4D,KAAK,AAAE,CAAA;AAC5E,OAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;AAClC,OAAG,MAAM,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG,EAAE;AACtC,WAAO,MAAM,CAAC,IAAI,CAAA;IAClB;GACD;EACD;AACD,wBAAuB,EAAE,UAAC,MAAM,EAAK;AACpC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;AAC5C,MAAG,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,CAAA,AAAC,EAC7E,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAA;AACpC,SAAO,KAAK,CAAA;EACZ;;;;;;;;AAQD,oBAAmB,EAAE,UAAC,MAAM,EAAE,OAAO,EAAK;AACzC,SAAO,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,iBAAiB,CAAC,CAAA;EACtD;;;;;;;;;;;AAWD,eAAc,EAAE,UAAC,MAAM,EAAE,OAAO,EAAK;AACpC,SAAO,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE,wBAAwB,CAAC,CAAA;EAC7D;CACD,CAAC,CAAA","file":"/lib/server/users.js.map","sourcesContent":["/**\n * User methods\n */\n\n getData = (userId, options, functionName, cb) => {\n\tMeteor.call('getAccessToken', userId, (err, res) => {\n\t\tif(res) {\n\t\t\tconst token = res\n\t\t\tconst ig = instagramNode.instagram()\n\t\t\tig.use({\n\t\t\t\taccess_token: token\n\t\t\t})\n\t\t\toptions = options || {}\n\t\t\tig_func = ig[functionName]\n\t\t\tig_func(options, cb, (err, res) => {\n\t\t\t\tif(err)\n\t\t\t//\t\tconsole.log(err)\n\t\t\t\t\tcb && cb(err, null)\n\t\t\t\tif(res)\n\t\t\t\t\tcb && cb(null, res)\n\t\t\t})\t\n\t\t}\n\t})\n }\n\n processCall = (userId, options, functionName) => {\n \tlet getCallAsync = Meteor.wrapAsync(getData)\n\ttry {\n\t\tlet result = getCallAsync(userId, options, functionName)\n\t\tif(result) \n\t\t\treturn result\n\t}\n\tcatch(e) {\n\t\terror = e.toString()\n\t\tthrow new Meteor.Error(500, error)\n\t}\n }\n\n Meteor.methods({\n \t'userData': (userId) => {\n\t\tconst token = Meteor.call('getAccessToken', userId)\n \t\tif(token) {\n \t\t\tconst url = `https://api.instagram.com/v1/users/self/?access_token=${token}`\n \t\t\tlet result = HTTP.call('GET', url)\n \t\t\tif(result && result.statusCode == 200) {\n \t\t\t\treturn result.data\n \t\t\t}\n \t\t}\n \t},\n \t'getUserFollowersCount': (userId) => {\n \t\tconst user = Meteor.call('userData', userId)\n \t\tif(user && (user.data.counts.followed_by || user.data.counts.followed_by == 0))\n \t\t\treturn user.data.counts.followed_by\n \t\treturn false\n \t},\n \t/**\n\t * Get the list of recent media liked by the user\n\t * @param userId {string}\n\t * @param options object { count,        [opt]\n\t *                         max_like_id   [opt] }\n\t * @returns {Array}\n\t */\n \t'getUserMediaLiked': (userId, options) => {\n \t\treturn processCall(userId, options, 'user_self_liked')\n \t},\n \t/**\n\t * Get the list of recent media published by the user\n\t * @param userId {string}\n\t * @param options object { count,           [opt]\n     *                         max_timestamp,   [opt]\n     *                         min_timestamp,   [opt]\n     *                         max_id,          [opt]\n     *                         min_id           [opt] }\n\t * @returns {Array}\n\t */\n \t'getUserMedia': (userId, options) => {\n \t\treturn processCall(userId, options, 'user_self_media_recent')\n \t}\n })"]},"hash":"dd3eda420c4fa87723d335997348b6394ac5f64a"}
