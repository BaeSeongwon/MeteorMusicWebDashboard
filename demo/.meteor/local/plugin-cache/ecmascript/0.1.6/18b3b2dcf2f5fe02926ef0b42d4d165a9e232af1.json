{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\nif (Meteor.isServer) {\n\n  Meteor.startup(function () {\n    // server/file.js\n\n    // define the websocket connection using the `io` global variable\n    var socket = io('https://path-to-external-server-goes-here/');\n\n    // subscribe to a data feed\n    socket.emit('subscribe', 'data-feed-name-goes-here');\n\n    // we can now handle connect, disconnect, and data-driven events\n    // NOTE: you must open up a new fiber using Meteor.bindEnvironment\n    // in order to perform Mongo read/writes or call Meteor methods\n    // within the socket connection\n\n    // on connect\n    socket.on('connect', Meteor.bindEnvironment(function () {\n      console.log('Connected to the websocket!');\n      Meteor.call('methodName1');\n\n      // on data event\n      socket.on('data-event', Meteor.bindEnvironment(function (data) {\n        console.log(data);\n        Meteor.call('methodName2');\n      }, function (e) {\n        throw e;\n      }));\n\n      // on disconnect\n      socket.on('disconnect', Meteor.bindEnvironment(function () {\n        console.log('Disconnected from the websocket!');\n        Meteor.call('methodName3');\n      }, function (e) {\n        throw e;\n      }));\n    }, function (e) {\n      throw e;\n    }));\n  });\n}","ast":null,"map":{"version":3,"sources":["/demo.js"],"names":[],"mappings":";AACA,IAAI,MAAM,CAAC,QAAQ,EAAE;;AAEnB,QAAM,CAAC,OAAO,CAAC,YAAY;;;;AAIzB,QAAI,MAAM,GAAG,EAAE,CAAC,4CAA4C,CAAC,CAAC;;;AAG9D,UAAM,CAAC,IAAI,CAAC,WAAW,EAAE,0BAA0B,CAAC,CAAC;;;;;;;;AAQrD,UAAM,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,eAAe,CAAC,YAAW;AACrD,aAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;AAC3C,YAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;;AAG3B,YAAM,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,eAAe,CAAC,UAAS,IAAI,EAAE;AAC5D,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,cAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;OAC5B,EAAE,UAAS,CAAC,EAAE;AACb,cAAM,CAAC,CAAC;OACT,CAAC,CAAC,CAAC;;;AAGJ,YAAM,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,eAAe,CAAC,YAAW;AACxD,eAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;AAChD,cAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;OAC5B,EAAE,UAAS,CAAC,EAAE;AACb,cAAM,CAAC,CAAC;OACT,CAAC,CAAC,CAAC;KAEL,EAAE,UAAS,CAAC,EAAE;AACb,YAAM,CAAC,CAAC;KACT,CAAC,CAAC,CAAC;GAEL,CAAC,CAAC;CAEJ","file":"/demo.js.map","sourcesContent":["\nif (Meteor.isServer) {\n\n  Meteor.startup(function () {\n// server/file.js\n\n// define the websocket connection using the `io` global variable\n    var socket = io('https://path-to-external-server-goes-here/');\n\n// subscribe to a data feed\n    socket.emit('subscribe', 'data-feed-name-goes-here');\n\n// we can now handle connect, disconnect, and data-driven events\n// NOTE: you must open up a new fiber using Meteor.bindEnvironment\n// in order to perform Mongo read/writes or call Meteor methods\n// within the socket connection\n\n// on connect\n    socket.on('connect', Meteor.bindEnvironment(function() {\n      console.log('Connected to the websocket!');\n      Meteor.call('methodName1');\n\n      // on data event\n      socket.on('data-event', Meteor.bindEnvironment(function(data) {\n        console.log(data);\n        Meteor.call('methodName2');\n      }, function(e) {\n        throw e;\n      }));\n\n      // on disconnect\n      socket.on('disconnect', Meteor.bindEnvironment(function() {\n        console.log('Disconnected from the websocket!');\n        Meteor.call('methodName3');\n      }, function(e) {\n        throw e;\n      }));\n\n    }, function(e) {\n      throw e;\n    }));\n\n  });\n\n}\n"]},"hash":"18b3b2dcf2f5fe02926ef0b42d4d165a9e232af1"}
